var express = require("express");
var app = express();
var url = require("url");
//var KYC = require("./contract_server.js");
var router = express.Router();

var Web3 = require('web3');
const fs = require("fs");
const solc = require('solc');

if (typeof web3 !== 'undefined') {
           var web3 = new Web3(web3.currentProvider);
        } else {
            // set the provider you want from Web3.providers
           var web3 = new Web3(new Web3.providers.HttpProvider("http://54.205.136.66:8545/"));
        }

web3.eth.defaultAccount = web3.eth.accounts[0];
console.log(web3.eth.getBalance(web3.eth.accounts[0]));

var kycContract = web3.eth.contract([{"constant":true,"inputs":[{"name":"orghash","type":"address"}],"name":"viewOrgInfo","outputs":[{"name":"orgname","type":"string"},{"name":"isKYCApprover","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"userhash","type":"address"},{"name":"orghash","type":"address"},{"name":"isApproved","type":"uint256"}],"name":"ChangeKYCApprovalStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"orghash","type":"address"},{"name":"userhash","type":"address"}],"name":"RequestApproveKYC","outputs":[{"name":"requestInProcess","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"orghash","type":"address"}],"name":"ApproveOrgForKYC","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"orgname","type":"string"},{"name":"orghash","type":"address"}],"name":"AddOrgInfo","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"userhash","type":"address"}],"name":"CheckKYCApprovalStatus","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"orghash","type":"address"},{"name":"index","type":"uint256"}],"name":"viewPendingKYCApprovalAddress","outputs":[{"name":"pendingAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"userhash","type":"address"}],"name":"viewUserInfo","outputs":[{"name":"fullname","type":"string"},{"name":"emailid","type":"string"},{"name":"mobileno","type":"string"},{"name":"isKYCApproved","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"userhash","type":"address"},{"name":"fullname","type":"string"},{"name":"emailid","type":"string"},{"name":"mobileno","type":"string"}],"name":"AddUserInfo","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"orghash","type":"address"}],"name":"viewPendingKYCRequests","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"}]);
var kyc = kycContract.new(
   {
     from: web3.eth.accounts[0], 
     data: '0x6060604052341561000f57600080fd5b61136c8061001e6000396000f3006060604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063142022ca146100a95780631c1f2aef1461016657806365922170146101c7578063842a01d81461023757806384c0449c146102705780638e78b165146102ec5780639c0d881514610339578063a37d9850146103bb578063c3710c851461054c578063e051b5971461064e575b600080fd5b34156100b457600080fd5b6100e0600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506106dc565b604051808060200183151515158152602001828103825284818151815260200191508051906020019080838360005b8381101561012a57808201518184015260208101905061010f565b50505050905090810190601f1680156101575780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b341561017157600080fd5b6101c5600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061081d565b005b34156101d257600080fd5b61021d600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506109f1565b604051808215151515815260200191505060405180910390f35b341561024257600080fd5b61026e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610b43565b005b341561027b57600080fd5b6102ea600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610ba0565b005b34156102f757600080fd5b610323600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610c56565b6040518082815260200191505060405180910390f35b341561034457600080fd5b610379600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610ca1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156103c657600080fd5b6103f2600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610d23565b60405180806020018060200180602001858152602001848103845288818151815260200191508051906020019080838360005b83811015610440578082015181840152602081019050610425565b50505050905090810190601f16801561046d5780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b838110156104a657808201518184015260208101905061048b565b50505050905090810190601f1680156104d35780820380516001836020036101000a031916815260200191505b50848103825286818151815260200191508051906020019080838360005b8381101561050c5780820151818401526020810190506104f1565b50505050905090810190601f1680156105395780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b341561055757600080fd5b61064c600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611025565b005b341561065957600080fd5b610685600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611174565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156106c85780820151818401526020810190506106ad565b505050509050019250505060405180910390f35b6106e4611247565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff16818054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561080d5780601f106107e25761010080835404028352916020019161080d565b820191906000526020600020905b8154815290600101906020018083116107f057829003601f168201915b5050505050915091509150915091565b6000816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030181905550600090505b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156109eb578373ffffffffffffffffffffffffffffffffffffffff16600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110151561091757fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156109de57600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020818154811015156109ab57fe5b906000526020600020900160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556109eb565b808060010191505061086a565b50505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1615610b385760026000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030181905550600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806001018281610ae0919061125b565b9160005260206000209001600084909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060019050610b3d565b600090505b92915050565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff02191690831515021790555050565b81600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000019080519060200190610bf6929190611287565b506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083151502179055505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301549050919050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515610cef57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b610d2b611247565b610d33611247565b610d3b611247565b60008060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154838054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ed75780601f10610eac57610100808354040283529160200191610ed7565b820191906000526020600020905b815481529060010190602001808311610eba57829003601f168201915b50505050509350828054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f735780601f10610f4857610100808354040283529160200191610f73565b820191906000526020600020905b815481529060010190602001808311610f5657829003601f168201915b50505050509250818054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561100f5780601f10610fe45761010080835404028352916020019161100f565b820191906000526020600020905b815481529060010190602001808311610ff257829003601f168201915b5050505050915093509350935093509193509193565b826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001908051906020019061107a929190611287565b50816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010190805190602001906110d0929190611287565b50806000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002019080519060200190611126929190611287565b5060008060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190555050505050565b61117c611307565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561123b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116111f1575b50505050509050919050565b602060405190810160405280600081525090565b81548183558181151161128257818360005260206000209182019101611281919061131b565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106112c857805160ff19168380011785556112f6565b828001600101855582156112f6579182015b828111156112f55782518255916020019190600101906112da565b5b509050611303919061131b565b5090565b602060405190810160405280600081525090565b61133d91905b80821115611339576000816000905550600101611321565b5090565b905600a165627a7a7230582057372e19037c9545aa8d2be920dd7c12f49af843fc868329c9b9340f0d9338040029', 
     gas: '4700000'
   }, function (e, contract){
    console.log("---CONTRACT---");
    if(e){
    	console.log("---ERROR---");
    	console.log(e);
    }
    else if (typeof contract.address !== 'undefined') {
    	console.log("---DEPLOYED---");
    	console.log(contract);
                 console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
        var KYC = kycContract.at(contract.address);
        

		router.get("/AddUserInfo",function(req,res){


        KYC.AddUserInfo("0x1158F15E74DCEc06AEAeEbA5b0EaA8461c73dB35","Vaibhav Saini","vasa@towardsblockchain.com","8130768913",function(error,result){

        if(error){
        	res.send(error);
            console.log(error);
}
        else{
        	res.send(result);
            console.log(result);
}

});

		});

		router.get("/viewUserInfo",function(req,res){
				KYC.viewUserInfo("0x1158F15E74DCEc06AEAeEbA5b0EaA8461c73dB35",function(err,res){
							if(err){
								res.send(err);
								console.log(err);
					}
							else{
								res.send(result);
								console.log(result);
					}
				});
		});

		// Tell express to use this router with /api before.
		// You can put just '/' if you don't want any sub path before routes.

		app.use("/",router);

		// Listen to this Port

		app.listen(3500,function(){
		  console.log("Live at Port 3500");
		});
    }

    else{
    		console.log(typeof contract);
    		console.log();
    	
    }
 })
















